-- MySQL Script generated by MySQL Workbench
-- Di 07 Mai 2019 18:58:15 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema matohmat
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `matohmat` ;

-- -----------------------------------------------------
-- Schema matohmat
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `matohmat` DEFAULT CHARACTER SET utf8mb4 ;
USE `matohmat` ;

-- -----------------------------------------------------
-- Table `matohmat`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `auth_hash` BINARY(20) NOT NULL COMMENT 'Use UNHEX() to use the Data',
  `balance` DECIMAL(13,2) NOT NULL DEFAULT 0.00,
  `last_seen` DATETIME NOT NULL DEFAULT NOW(),
  `name` VARCHAR(45) NULL,
  `available` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `auth_hash_UNIQUE` (`auth_hash` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`admins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`admins` (
  `id` INT NOT NULL,
  `username` VARCHAR(45) CHARACTER SET 'utf8mb4' NOT NULL,
  `password` BINARY(64) NOT NULL COMMENT 'use sha3 and salt to secure password',
  `email` VARCHAR(45) NOT NULL,
  `password_salt` BINARY(64) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_admins_1`
    FOREIGN KEY (`id`)
    REFERENCES `matohmat`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `image_url` VARCHAR(2083) NULL,
  `reorder_point` INT NULL,
  `available` TINYINT(1) NOT NULL DEFAULT 1,
  `barcode` VARCHAR(256) NULL,
  `items_per_crate` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `product_hash_UNIQUE` (`barcode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`product_prices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`product_prices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `price` DECIMAL(13,2) NOT NULL,
  `valid_from` DATETIME NOT NULL DEFAULT NOW(),
  `product_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_products_product_detail_idx` (`product_id` ASC),
  CONSTRAINT `fk_products_product_detail`
    FOREIGN KEY (`product_id`)
    REFERENCES `matohmat`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`transactions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL DEFAULT NOW(),
  `sender` INT NOT NULL,
  `recipient` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_transaction_sender_idx` (`sender` ASC) VISIBLE,
  INDEX `fk_transaction_recipient_idx` (`recipient` ASC) VISIBLE,
  CONSTRAINT `fk_transaction_sender`
    FOREIGN KEY (`sender`)
    REFERENCES `matohmat`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_recipient`
    FOREIGN KEY (`recipient`)
    REFERENCES `matohmat`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`purchase_amount_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`purchase_amount_products` (
  `prices_id` INT NOT NULL,
  `count` INT NULL,
  `transaction_id` INT NOT NULL,
  `id` INT NOT NULL AUTO_INCREMENT,
  INDEX `fk_products_idx` (`prices_id` ASC) VISIBLE,
  INDEX `fk_transaction_idx` (`transaction_id` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_products`
    FOREIGN KEY (`prices_id`)
    REFERENCES `matohmat`.`product_prices` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `matohmat`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`transfers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`transfers` (
  `transaction_id` INT NOT NULL,
  `amount` DECIMAL(13,2) NOT NULL,
  PRIMARY KEY (`transaction_id`),
  CONSTRAINT `fk_transfer_transaction`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `matohmat`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`orders` (
  `transaction_id` INT NOT NULL,
  `buy_cost` DECIMAL(13,2) NOT NULL,
  `admin_id` INT NOT NULL,
  PRIMARY KEY (`transaction_id`),
  CONSTRAINT `fk_order_transaction`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `matohmat`.`transactions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `matohmat`.`ordered_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `matohmat`.`ordered_products` (
  `order_transaction_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `count` INT NOT NULL,
  PRIMARY KEY (`order_transaction_id`, `product_id`),
  INDEX `fk_order_has_product_detail_product_detail_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_order_has_product_detail_order_idx` (`order_transaction_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_order`
    FOREIGN KEY (`order_transaction_id`)
    REFERENCES `matohmat`.`orders` (`transaction_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_product_detail`
    FOREIGN KEY (`product_id`)
    REFERENCES `matohmat`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'matomat_system' IDENTIFIED BY 'password_here';

GRANT EXECUTE ON `matohmat`.* TO 'matomat_system'@'%';
GRANT SELECT, INSERT, TRIGGER ON TABLE `matohmat`.* TO 'matomat_system';
GRANT SELECT, INSERT, TRIGGER ON TABLE `matohmat`.* TO 'matomat_system';
GRANT INSERT, SELECT, UPDATE, TRIGGER ON TABLE `matohmat`.`admins` TO 'matomat_system';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `matohmat`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `matohmat`;
INSERT INTO `matohmat`.`users` (`id`, `auth_hash`, `balance`, `last_seen`, `name`) VALUES (1, 0x7C211433F02071597741E6FF5A8EA34789ABBF43, 0, NOW(), 'world');
INSERT INTO `matohmat`.`users` (`id`, `auth_hash`, `balance`, `last_seen`, `name`) VALUES (2, 0x88B0A95EA070652373AC2436EC1FB0ECB1E2F424, 0, NOW(), 'matohmat');
INSERT INTO `matohmat`.`users` (`id`, `auth_hash`, `balance`, `last_seen`, `name`) VALUES (3, 0x4E7AFEBCFBAE200B22C7C85E5560F89A2A0280B4, 0, NOW(), 'root');
INSERT INTO `matohmat`.`admins` (`id`, `username`, `password`, `email`, `password_salt`) VALUES (3, 'Admin', 0x737101E51A67FB96616F066CF18003E7AA05CF08098645720B9E4C912067111DDD122B6A8727D1C6BA384CD2FAA66C976C2062338802F98B94CB71954AE3E80A, 'fachsachft-in@th-nuernberg.de', 0xF5F02AA4DDEF803F723C8F50177B9CFC92D4F5184F18813C04ACCBC546DFA726D0CF4BBBDB0AE441861BE9AF90D4B11390D8BE3541E03DA40A95E7EBA36221EB);

COMMIT;
